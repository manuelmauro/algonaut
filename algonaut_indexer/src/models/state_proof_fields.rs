/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// StateProofFields : \\[sp\\] represents a state proof.  Definition: crypto/stateproof/structs.go : StateProof

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StateProofFields {
    #[serde(rename = "part-proofs", skip_serializing_if = "Option::is_none")]
    pub part_proofs: Option<Box<crate::models::MerkleArrayProof>>,
    /// \\[pr\\] Sequence of reveal positions.
    #[serde(
        rename = "positions-to-reveal",
        skip_serializing_if = "Option::is_none"
    )]
    pub positions_to_reveal: Option<Vec<i32>>,
    /// \\[r\\] Note that this is actually stored as a map\[uint64\] - Reveal in the actual msgp
    #[serde(rename = "reveals", skip_serializing_if = "Option::is_none")]
    pub reveals: Option<Vec<crate::models::StateProofReveal>>,
    /// \\[v\\] Salt version of the merkle signature.
    #[serde(rename = "salt-version", skip_serializing_if = "Option::is_none")]
    pub salt_version: Option<i32>,
    /// \\[c\\]
    #[serde(rename = "sig-commit", skip_serializing_if = "Option::is_none")]
    pub sig_commit: Option<String>,
    #[serde(rename = "sig-proofs", skip_serializing_if = "Option::is_none")]
    pub sig_proofs: Option<Box<crate::models::MerkleArrayProof>>,
    /// \\[w\\]
    #[serde(rename = "signed-weight", skip_serializing_if = "Option::is_none")]
    pub signed_weight: Option<i32>,
}

impl StateProofFields {
    /// \\[sp\\] represents a state proof.  Definition: crypto/stateproof/structs.go : StateProof
    pub fn new() -> StateProofFields {
        StateProofFields {
            part_proofs: None,
            positions_to_reveal: None,
            reveals: None,
            salt_version: None,
            sig_commit: None,
            sig_proofs: None,
            signed_weight: None,
        }
    }
}
