/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// TransactionStateProof : Fields for a state proof transaction.   Definition: data/transactions/stateproof.go : StateProofTxnFields

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransactionStateProof {
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<Box<crate::models::IndexerStateProofMessage>>,
    #[serde(rename = "state-proof", skip_serializing_if = "Option::is_none")]
    pub state_proof: Option<Box<crate::models::StateProofFields>>,
    /// \\[sptype\\] Type of the state proof. Integer representing an entry defined in protocol/stateproof.go
    #[serde(rename = "state-proof-type", skip_serializing_if = "Option::is_none")]
    pub state_proof_type: Option<u64>,
}

impl TransactionStateProof {
    /// Fields for a state proof transaction.   Definition: data/transactions/stateproof.go : StateProofTxnFields
    pub fn new() -> TransactionStateProof {
        TransactionStateProof {
            message: None,
            state_proof: None,
            state_proof_type: None,
        }
    }
}
